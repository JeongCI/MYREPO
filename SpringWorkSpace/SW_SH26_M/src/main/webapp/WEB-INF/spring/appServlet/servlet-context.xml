<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:beans="http://www.springframework.org/schema/beans"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:task="http://www.springframework.org/schema/task"
  xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
                    http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
    http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
    ">

  <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
  
  <!--test interceptor등록 -->
  <beans:bean id="pcwkInterceptor"  class="com.pcwk.ehr.cmn.PcwkInterceptor"></beans:bean>
  
  <!-- login interceptor -->
  <beans:bean id="loginInterceptor" class="com.pcwk.ehr.cmn.LoginInterceptor"></beans:bean>
  
  
  <!-- 모든 요청을 interceptor할것 
  단 /login/으로 시작되는 것은 제외 한다.
  -->
  <mvc:interceptors>
     <mvc:interceptor>
      <mvc:mapping path="/**"/>
      <mvc:exclude-mapping path="/login/**"/>
      <mvc:exclude-mapping path="/menu/**"/>
      <mvc:exclude-mapping path="/resources/**"/>
      <mvc:exclude-mapping path="/main/**"/>
      <mvc:exclude-mapping path="/boot/**"/>
      <mvc:exclude-mapping path="/file/**"/>
      <beans:ref bean="loginInterceptor"/>
     </mvc:interceptor>  
  </mvc:interceptors>
  
  <!-- Enables the Spring MVC @Controller programming model -->
  <annotation-driven />

  <!-- 스케줄러 -->
  <task:scheduler id="jobScheduler" pool-size="5"/>
  <task:annotation-driven scheduler="jobScheduler"/>

  <!-- cron 세팅 
    ref는 @Commponent, @Controller, @Service, @Repository
    rec에는 camel case로 입력
    method: 스케줄러로 실행할 메서드
    cron: cron표현식으로 지정
  -->
  <task:scheduled-tasks>
      <!-- 
      
      10초에 1번 
      
            초 분 시 일 월 요일
              초: 0-59,-,*,/
              분: 0-59,-,*,/
              시: 0-23,-,*,/
              일: 1-31,-,*,/, ?
              월: 1~12,JAN-DEC,-,*,/
           요일: 1-7, SUN-SAT,-,*,/                                              
           
            *: 항상
            /: 시작 시간과 반복 간격  
               ex) 분: 5/10 -> 5분에 시작해서 10간격으로 동작
            ? : 특정 값이 아닌 어떤 값이든 상관 없음      
       ex)0 12 12 * * ?      
      -->
      <!-- <task:scheduled ref="cronTest" method="test" cron="0/10 * * * * ?"/> -->
      <task:scheduled ref="memberUpLevelCron" method="upgradeLevels" cron="0 10 13 * * ?"/>
  </task:scheduled-tasks>
  

  <!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
  <resources mapping="/resources/**" location="/resources/" />

  <!-- tiles config : order:1 -->
  <beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
    <beans:property name="order" value="1"></beans:property>
  </beans:bean>
  <!-- tiles main config -->
   <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
    <beans:property name="definitions">
       <beans:list>
        <beans:value>/WEB-INF/views/tiles/tiles.xml</beans:value>
       </beans:list>
    </beans:property>
  </beans:bean>

  <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
  <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <beans:property name="prefix" value="/WEB-INF/views/" />
    <beans:property name="suffix" value=".jsp" />
    <beans:property name="order"  value="3"></beans:property>
  </beans:bean>
  
  <!-- DownloadView -->
  <beans:bean id="downloadView" class="com.pcwk.ehr.file.DownloadView"/>
  
  <!--view이름과 동일한 view를 찾아 주는   BeanNameViewResolver-->
  <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
     <beans:property name="order" value="2"></beans:property>
  </beans:bean>
  
  <context:component-scan base-package="com.pcwk.ehr" />
  
  
  
</beans:beans>
